# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

before_script:
  - IMAGE_TAG="$(echo $CI_COMMIT_SHA | head -c 8)"

cache:
  paths:
    - maven.repository/
    - .m2/repository/
    - target/

variables:
      MAVEN_OPTS: "-Djava.awt.headless=true -Dmaven.repo.local=maven.repository/"
      MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"
      REPOSITORY_URL: "848269657720.dkr.ecr.ap-southeast-1.amazonaws.com/gitlab-ci-scp"
      REGION: "ap-southeast-1"

stages:
  - build
  - unit-test
  - package

maven-build-stage:
  image: maven:3-jdk-11
  stage: build
  script: 
    - echo "build stage execution"
    - mvn clean install

maven-unit-test:
  image: maven:3-jdk-11
  stage: unit-test
  script:
    - echo "unit test stage execution"
    - mvn $MAVEN_CLI_OPTS clean test -P unit-test

build_image:
  image: docker:latest
  stage: package
  services:
    - name: docker:dind
  script:
    - echo "build image and push to AWS ECR stage execution"
    - apk add â€” no-cache curl jq python py-pip
    - pip install awscli
    - $(aws ecr get-login --no-include-email --region "${REGION}")
    - echo "building image"
    - docker build -f Dockerfile -t $REPOSITORY_URL:latest
    - echo "tagging image"
    - docker tag $REPOSITORY_URL:latest $REPOSITORY_URL:$IMAGE_TAG
    - echo "push to ECR repository"
    - docker push $REPOSITORY_URL:latest
    - docker push $REPOSITORY_URL:$IMAGE_TAG
